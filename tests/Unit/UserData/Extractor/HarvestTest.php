<?php

namespace OAuth\Unit\UserData\Extractor;

use OAuth\UserData\Extractor\Harvest;

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.1 on 2014-02-07 at 22:32:44.
 */
class HarvestTest extends \PHPUnit_Framework_TestCase
{
    const RESPONSE_PROFILE =
'{
  "user": {
    "id": "012345678",
    "email": "johndoe@hotmail.com",
    "first_name": "John",
    "last_name": "Doe",
    "avatar_url": "something_n.jpg",
    "timezone": "Pacific Time (US &amp; Canada)",
    "admin": true
  }
}';

    /**
     * @var Harvest
     */
    protected $extractor;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->extractor = new Harvest();
        $service = $this->getMockBuilder('\\OAuth\\OAuth2\\Service\\Harvest')
            ->disableOriginalConstructor()
            ->getMock();

        $service->expects($this->any())
            ->method('requestJSON')
            ->willReturn(json_decode(HarvestTest::RESPONSE_PROFILE, TRUE));

        /**
         * @var \OAuth\Common\Service\ServiceInterface $service
         */
        $this->extractor->setService($service);
    }

    public function testGetUniqueId()
    {
        $this->assertEquals('012345678', $this->extractor->getUniqueId());
    }

    public function testGetUsername()
    {
        $this->assertEquals('johndoe@hotmail.com', $this->extractor->getUsername());
    }

    public function testGetFirstName()
    {
        $this->assertEquals('John', $this->extractor->getFirstName());
    }

    public function testGetLastName()
    {
        $this->assertEquals('Doe', $this->extractor->getLastName());
    }

    public function testGetFullName()
    {
        $this->assertEquals('John Doe', $this->extractor->getFullName());
    }

    public function testGetEmail()
    {
        $this->assertEquals('johndoe@hotmail.com', $this->extractor->getEmail());
    }

    public function testGetImageUrl()
    {
        $this->assertEquals('https://api.harvestapp.com/something_n.jpg', $this->extractor->getImageUrl());
    }

    public function testGetExtra()
    {
        $extras = $this->extractor->getExtras();
        $this->assertArrayHasKey('timezone', $extras);
        $this->assertArrayHasKey('admin', $extras);

        $this->assertArrayNotHasKey('id', $extras);
        $this->assertArrayNotHasKey('name', $extras);
        $this->assertArrayNotHasKey('first_name', $extras);
        $this->assertArrayNotHasKey('last_name', $extras);
        $this->assertArrayNotHasKey('email', $extras);
    }
}
