<?php
namespace OAuth\Unit\UserData\Extractor;

use OAuth\UserData\Extractor\Google;

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.1 on 2014-02-08 at 00:52:53.
 */
class GoogleTest extends \PHPUnit_Framework_TestCase
{
    const PROFILE_RESPONSE = <<<END
{
 "id": "123",
 "email": "director@google.com",
 "verified_email": true,
 "name": "And ~",
 "given_name": "And",
 "family_name": "~",
 "picture": "https://image",
 "locale": "ru"
}
END;

    /**
     * @var Google
     */
    protected $extractor;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->extractor = new Google();
        $service = $this->getMockBuilder('\\OAuth\\OAuth2\\Service\\Google')
            ->disableOriginalConstructor()
            ->getMock();

        $service->expects($this->any())
            ->method('requestJSON')
            ->with(Google::REQUEST_PROFILE)
            ->willReturn(json_decode(self::PROFILE_RESPONSE, TRUE));
        /**
         * @var \OAuth\Common\Service\ServiceInterface $service
         */
        $this->extractor->setService($service);
    }

    public function testSupportEmail()
    {
        $this->assertTrue($this->extractor->supportsEmail());
    }

    public function testGetUniqueId()
    {
        $this->assertEquals(123, $this->extractor->getUniqueId());
    }

    public function testGetUsername()
    {
        $this->assertEquals('And ~', $this->extractor->getUsername());
    }

    public function testGetFullName()
    {
        $this->assertEquals('And ~', $this->extractor->getFullName());
    }

    public function testGetFistName()
    {
        $this->assertEquals('And', $this->extractor->getFirstName());
    }

    public function testGetLastName()
    {
        $this->assertEquals('~', $this->extractor->getLastName());
    }

    public function testGetDescription()
    {
        $this->assertNull($this->extractor->getDescription());
    }

    public function testGetLocation()
    {
        $this->assertNull($this->extractor->getLocation());
    }

    public function testGetProfileUrl()
    {
        $this->assertEquals('https://plus.google.com/123', $this->extractor->getProfileUrl());
    }

    public function testGetImageUrl()
    {
        $this->assertEquals(
            'https://image',
            $this->extractor->getImageUrl()
        );
    }

    public function testGetWebsites()
    {
        $this->assertNull($this->extractor->getWebsites());
    }

    public function testGetExtra()
    {
        $extra = $this->extractor->getExtras();

        $this->assertArrayHasKey('locale', $extra);

        $this->assertArrayNotHasKey('name', $extra);
        $this->assertArrayNotHasKey('id', $extra);
        $this->assertArrayNotHasKey('description', $extra);
    }
}
